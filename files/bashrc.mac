#!/bin/sh
#
# Things that only work on Macs, go here

# Horrible and slow, use ctrl+shift+power instead.
alias lockscreen='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'

# Tmux on Sierra throws ugly errors unless I do this
# wtf is this
# [warn] kq_init: detected broken kqueue; not using.: File exists
# Don't remove till tmux forums say so: https://github.com/tmux/tmux/issues/475
export EVENT_NOKQUEUE=1

# App shortcuts
alias chrome='open -a /Applications/Google\ Chrome.app'
alias firefox='open -a /Applications/Firefox.app/'
alias safari='open -a safari'
alias vlc='open -a /Applications/VLC.app'

# Popup in notification center
function notify() {
  terminal-notifier -message "$2" -title "$1" -sound Ping
}

# Lets you run a command continuously till it returns status zero
# At which point it throws a notification
#
# Example: Notify me when my cult booking script has given a recent success
# poll "curl -s http://139.59.39.63/cult/harman/log.txt | tail | grep SUCCESS";
function poll() {
  if [[ $# -ne 1 ]]; then
    echo "Poll what?"
    echo "Usage: poll 'the command you want to run'"
  else
    cmd=$1

    ( eval $cmd ) && notify "Done!" "Polling complete" 1>&2 2>/dev/null

    while [[ $? -ne 0 ]]; do
      sleep 10
      ( eval $cmd ) && notify "Done!" "Polling complete" 1>&2 2>/dev/null
    done
  fi
}

# vlc shortcut to radio
# Retired after rockradio removed radio links
# alias goradio-blues="/Applications/VLC.app/Contents/MacOS/VLC ~/Music/Radios\ and\ Playlists/ROCKRADIO.COM/Blues\ Rock/ROCKRADIO.COM\ -\ Blues\ Rock.pls "

# firefox tabs
# Retired, I use chrome now.
# alias gofirefox="/Applications/Firefox.app/Contents/MacOS/firefox -new-tab -url http://gmail.com/ -new-tab -url http://facebook.com/ -new-tab -url http://quora.com/ &"

# Opening terminal and typing w-i-f-tab-enter
# is faster and more async than using status bar
function wifi_reset() {
  networksetup -setairportpower en0 off
  networksetup -setairportpower en0 on
}
function WIFI_RESET() {
  wifi_reset
}

function ssid_name() {
  # Usually just en1 or something
  wlan_interface_name=$(ifconfig | grep "192.168" -B 3 | head -n 1 | cut -d ':' -f 1)
  # Complete SSID
  networksetup -getairportnetwork $wlan_interface_name | awk -F": " '{print $2}'
}

#!/bin/sh
#
# Small changes that make typical Unix use slightly easier, go here.

#Terminal be pretty one day
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# I can think of no reason why this should be a small number
export HISTSIZE=999999999999999999999999
export HISTFILESIZE=999999999999999999999999
export HISTTIMEFORMAT="%d/%m/%y %T "
export HISTCONTROL=ignoreboth

# How  did anyone function without this?
alias diff='colordiff'

# Ruby inline
alias rube="ruby -e"

# unix coin toss
alias toss="rube 'p rand.round.zero? ? :heads : :tails'"

# Stuff I don't want showing up in the git repo
alias rc='sublime ~/.bashrc'

# If there's a .bashrc in the current directory, grab it
function pick_bashrc_if_available(){
  if [[ "$bashrc" != "$PWD" && "$PWD" != "$HOME" && -e .bashrc ]]
  then
    bashrc="$PWD"
    . .bashrc
  fi
}
export PROMPT_COMMAND=pick_bashrc_if_available

# Look up IPs easily
function lookup(){
  whois $1
  curl -X GET "https://ipinfo.io/$1"
  echo
}

# If you're checking path for something, I suspect
# what you really want to do is copy it somewhere else.
# Let me strip that newline for you.
function path(){
  if [[ $# -eq 0 ]]
  then
    pwd | tee /dev/tty | tr -d '[:space:]' | pbcopy
  else
    realpath $1 | tee /dev/tty | tr -d '[:space:]' | pbcopy
  fi
}

# -.-
alias CD='cd'

# Make dir and cd into it. Looks like gaali but isn't.
function mkcd () { mkdir -p "$@" && cd "$@"; }

# Bash doesn't have a yield, but this is close enough
# Little macro that checks for confirmation before executing something
# Usage:
# echo "Warning: you are doing dangerous_thing"
# confirm && do_dangerous_thing
function confirm() {
  read -p "Continue? <y/N> " prompt
  if [[ $prompt != "y" && $prompt != "Y" && $prompt != "yes" && $prompt != "Yes" ]]
  then
    echo "Lol okay."
    false
  fi
}

# Gently murder the nice apps
function close(){
  if [[ $# -eq 0 ]]
    then echo "Usage: ${FUNCNAME[0]} [PATTERN]"
  elif [[ -n $(pgrep $1) ]]
    then kill $(pgrep $1); echo "Quit $1."
  else
    echo "No instances of $1 open."
  fi
}

# Brutally extinguish all processes that match a pattern
function hunt(){
  if [[ $# -eq 0 ]]
    then echo "Usage: ${FUNCNAME[0]} [PATTERN]"
  elif [[ -n $(pgrep $1) ]]
    then sudo kill -9 $(pgrep $1); echo "$1 has been taken care of."
  else
    echo 'ERROR: No matching processes. What are you hunting?'
  fi
}

# Find out who you want to kill
alias wtf='ps ax -o user,pid,%cpu,%mem,tty,start,time,command | sed 1d | sort -nrk +4 | head | cut -c -181'

# Host directories
alias webserver='python -m SimpleHTTPServer'
